#!/usr/bin/env bash

# Creates ColTea token using dapp.tools ensure that ColTea extract was already run

CWD="${0%/*}"

function write_json_colt {
  if [ -z "$1" ]; then
    echo "No output file passed. Use write_json path/to/file.json"
    exit 1
  fi

  echo "Publishing output into $1"
  cat > $1 <<- EOM

{
  "TOKEN": "$TOKEN",
  "USDT": "$USDT",
  "DECIMALS": "$DECIMALS",
  "NAME": "$NAME"
}
EOM
}



echo "building may take a while don't exit"

dapp --use solc:0.5.10 build --extract

# ${CUSIP#0x}

USDT=$(seth send --create out/ColTea.bin 'ColTea(string memory,string memory,uint8,bytes9,uint256,uint256,address,uint256)' "USDT" "T" 6 0x393132373934534c34 1 1 0xdeadbeefdeadbeefdeadbeefdeadbeefdeadbeef 2)

export TOKEN=$USDT

echo "token address is ${USDT} and name is USDT"
# echo out the key params of the token that will be fed to other parts later on

NAME=$(seth --to-bytes32 "$(seth --from-ascii "USDT")")
echo "bytes32 name is ${NAME}"

echo "supply is $(seth --to-dec $(seth call $USDT "totalSupply()"))"

echo "balance of ${ETH_FROM} is $(seth --to-dec $(seth call $USDT "balanceOf(address)(uint256)" $ETH_FROM))"

export DECIMALS=$(seth call $USDT "decimals()")
echo "Decimals is $(seth --to-dec ${DECIMALS})"


OUT=$(cd "${CWD}/../out" && pwd)

write_json_colt "$OUT/addressesColT.json"